# Configuraciones de Eureka para el cliente
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.client.registry-fetch-interval-seconds=30

# URL del servidor Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Nombre de la aplicaci√≥n
spring.application.name=products-service

# Configuraciones adicionales
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true


server.port=8081

#actuator
management.endpoints.web.exposure.include=health,info
management.info.env.enabled=true
info.app.name= servicio-productos
info.app.description= Microservicio de productos desde local -  que se vayan todos la p* que los pario
info.app.version = 0.0.1


eureka.instance.statusPageUrlPath= http://localhost:8080/actuator/info
eureka.instance.healthCheckUrlPath: http://localhost:8080/actuator/health

management.tracing.sampling.probability=1.0 
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-service

#Si no funciona la conexion con el config service mediante eureka, anda a buscar en configserver
#al puerto 8888 (ponemos configserver ya que es un alias, para que spring lo entienda
#a pesar que el spring.name de nuestro config-server es config-service
spring.config.import=optional:configserver:http://localhost:8888/
